{"version":3,"sources":["Views/NewProject.module.scss","Views/Dashboard.module.scss","context/UsuarioContext.jsx","components/UserForm.jsx","Views/NewProject.jsx","Views/Dashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","UsuarioContext","createContext","UsuarioProvider","props","useState","usuario","setUsuario","Provider","value","children","UserForm","initialValues","username","email","password","confirm","userForm","setUserForm","loginForm","setLoginForm","useContext","history","useHistory","handleOnChange","e","target","name","onSubmitHandle","a","preventDefault","Swal","fire","title","text","icon","axios","post","response","console","log","data","err","message","reset","handleOnChangeLogin","onLoginHandle","get","user","push","Container","Row","Col","onSubmit","className","htmlFor","type","onChange","required","minLength","NewProject","projectName","dueDate","projectForm","setProjectForm","useEffect","styles","linkCreateProject","to","Dashboard","projectList","setProjectList","getAllProjects","moveToProgress","id","put","moveToCompleted","deleteProject","delete","then","res","catch","overflow","backlog","filter","item","status","map","cardBackLog","Button","onClick","_id","buttonBacklog","inprogress","cardInProgress","buttonInprogress","completed","buttonCompleted","linkAdd","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a07664f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"linkCreateProject\":\"NewProject_linkCreateProject__3EsT8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardBackLog\":\"Dashboard_cardBackLog__2oSoC\",\"overflow\":\"Dashboard_overflow__2v7qK\",\"backlog\":\"Dashboard_backlog__2Omr4\",\"buttonBacklog\":\"Dashboard_buttonBacklog__1FMFV\",\"buttonInprogress\":\"Dashboard_buttonInprogress__2QkBb\",\"buttonCompleted\":\"Dashboard_buttonCompleted___wPum\",\"inprogress\":\"Dashboard_inprogress__omgzz\",\"cardInProgress\":\"Dashboard_cardInProgress__lXw9L\",\"completed\":\"Dashboard_completed__15lB2\",\"linkAdd\":\"Dashboard_linkAdd__3_Vqg\"};","import { createContext, useState } from \"react\";\n\nexport const UsuarioContext = createContext();\n\nexport const UsuarioProvider = (props) =>{\n    const [usuario,setUsuario] = useState(null);\n\n    return(\n        <UsuarioContext.Provider value={{usuario,setUsuario}}>\n            {props.children}\n        </UsuarioContext.Provider>\n    )\n\n}\n","import React, { useContext, useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\"\nimport Swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport { UsuarioContext } from \"../context/UsuarioContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst UserForm = () => {\n\n    const initialValues = {\n        username: '',\n        email: '',\n        password: '',\n        confirm: ''\n    }\n    const [userForm, setUserForm] = useState(initialValues);\n    const [loginForm, setLoginForm] = useState(initialValues);\n    const { setUsuario } = useContext(UsuarioContext);\n    const history = useHistory();\n\n\n    const handleOnChange = (e) => {\n        setUserForm({ ...userForm, [e.target.name]: e.target.value })\n    }\n\n    const onSubmitHandle = async (e) => {\n        e.preventDefault();\n        if (userForm.password !== userForm.confirm) {\n            Swal.fire({\n                title: \"error\",\n                text: \"Las contraseñas no coinciden\",\n                icon: \"error\"\n            });\n            //retornar false para salir de onSubmitHandle ya no se debe ejecutar las siguientes lineas\n            return false;\n        }\n\n        try {\n            //creo el usuario \n            const response = await axios.post(\"http://localhost:8000/user\", userForm);\n            console.log(`onSubmitHandle: ${response.data}`);\n\n            Swal.fire({\n                title: \"Usuario creado satisfactoriamente\",\n                text: \"OK\",\n                icon: \"success\"\n            })\n\n        } catch (err) {\n            console.log(err);\n            Swal.fire({\n                title: `Usuario no fue creado ${err.response.data.err.message} `,\n                text: \"Not OK\",\n                icon: \"error\"\n            })\n        }\n        reset();\n    }\n\n\n\n    const handleOnChangeLogin = (e) => {\n        setLoginForm({ ...loginForm, [e.target.name]: e.target.value })\n    }\n\n    const onLoginHandle = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.get(`http://localhost:8000/user/${loginForm.email}`);\n            const { user } = response.data;\n\n            if (loginForm.password === user.password) {\n                console.log(\"Usuario encontrado en la bd\");\n                Swal.fire({\n                    title: \"Connected\",\n                    text: \"User Connected\",\n                    icon: \"success\"\n                });\n                reset();\n                setUsuario(user);\n                history.push(\"/\");\n            } else {\n                console.log(\"Usuario no encontrado en la BD\");\n                Swal.fire({\n                    title: \"User not found\",\n                    text: \"User Not Connected\",\n                    icon: \"error\"\n                });\n            }\n\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    const reset = () => {\n        setUserForm(initialValues);\n        setLoginForm(initialValues);\n\n\n    }\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <h2>Project Manager</h2>\n\n                    <Col>\n                        <form onSubmit={onSubmitHandle} >\n                            <h3>Register</h3>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"\">Username</label>\n                                <input className=\"form-control\" type=\"text\" name=\"username\" value={userForm.username} onChange={handleOnChange} required minLength=\"3\" />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"\">Email</label>\n                                <input className=\"form-control\" type=\"email\" name=\"email\" value={userForm.email} onChange={handleOnChange} required />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"\">Password</label>\n                                <input className=\"form-control\" type=\"password\" name=\"password\" value={userForm.password} onChange={handleOnChange} required />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"\">Confirmar </label>\n                                <input className=\"form-control\" type=\"password\" name=\"confirm\" value={userForm.confirm} onChange={handleOnChange} />\n                            </div>\n\n\n                            <button className=\"btn btn-primary mt-3\" type=\"submit\" >Registrar</button>\n                        </form>\n\n                    </Col>\n                    <Col >\n                        <form onSubmit={onLoginHandle} >\n                            <h3>Login</h3>\n\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"\">Email</label>\n                                <input className=\"form-control\" type=\"email\" name=\"email\" value={loginForm.email} onChange={handleOnChangeLogin} required />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"\">Password</label>\n                                <input className=\"form-control\" type=\"password\" name=\"password\" value={loginForm.password} onChange={handleOnChangeLogin} required />\n                            </div>\n\n                            <button className=\"btn btn-primary mt-3\" type=\"submit\" >Login</button>\n                        </form>\n\n\n                    </Col>\n                </Row>\n\n            </Container>\n\n        </div>\n    )\n}\nexport default UserForm;","import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport styles from \"./NewProject.module.scss\";\nimport { useHistory } from \"react-router-dom\";\nimport { UsuarioContext } from \"../context/UsuarioContext\";\n\n\nconst NewProject = () => {\n\n    const initialValues = {\n        projectName:\"\",\n        dueDate:\"\"\n    }\n    \n    const [projectForm,setProjectForm] = useState(initialValues);\n    const history = useHistory();\n    const {usuario, setUsuario} = useContext(UsuarioContext);\n\n\n    const handleOnChange = (e) => {\n        setProjectForm({...projectForm, [e.target.name]: e.target.value})\n    }\n    const onSubmitHandle = async(e)=>{\n        e.preventDefault();\n        console.log(e);\n        try {\n            //creo el project \n            const response = await axios.post(\"http://localhost:8000/projects/new\", projectForm);\n            console.log(`onSubmitHandle: ${response.data}`);\n\n            Swal.fire({\n                title: \"Project creado satisfactoriamente\",\n                text: \"OK\",\n                icon: \"success\"\n            })\n            reset(); \n            history.push(\"/\")\n\n        } catch (err) {\n            console.log(err);\n            Swal.fire({\n                title: `Project no fue creado ${err.response.data.err.message} `,\n                text: \"Not OK\",\n                icon: \"error\"\n            })\n        }\n    }\n\n    const reset = () => {\n        setProjectForm(initialValues);\n    }\n\n    useEffect(()=>{\n        if(!usuario){\n            history.push(\"/sign_in\");\n        }\n    },[]\n\n    )\n\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <h1>Project Manager</h1>\n                    <Link className={styles.linkCreateProject} to=\"/\">Back to dashboard</Link>\n\n                    <Col>\n                        <form onSubmit={onSubmitHandle} >\n                            <h4>Plan a New Project</h4>\n\n\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"\">Project</label>\n                                <input className=\"form-control\" type=\"text\" name=\"projectName\" value={projectForm.projectName} \n                                onChange={handleOnChange} required minLength=\"3\"/>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"\">Due Date</label>\n                                <input className=\"form-control\" type=\"date\" name=\"dueDate\" value={projectForm.dueDate} \n                                onChange={handleOnChange} required />\n                            </div>\n\n                            <button className=\"btn btn-primary mt-3\" type=\"submit\" >Plan a Project</button>\n                        </form>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default NewProject;","import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport styles from \"./Dashboard.module.scss\";\nimport Button from \"react-bootstrap/Button\";\nimport Swal from \"sweetalert2\";\nimport { Link } from \"react-router-dom\";\nimport { UsuarioContext } from \"../context/UsuarioContext\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\nconst Dashboard = () => {\n\n    const [projectList, setProjectList] = useState([]);\n    const {usuario, setUsuario} = useContext(UsuarioContext);\n    const history = useHistory();\n\n    const getAllProjects = async () => {\n        try {\n            const response = await axios.get(\"http://localhost:8000/projects\");\n            console.log(response.data);\n            setProjectList(response.data);\n            console.log(projectList);\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    useEffect(() => {\n        if(!usuario){\n            history.push(\"/sign_in\");\n        }\n        //setTimeout(()=>{\n        getAllProjects();\n\n        // },1000)\n\n    }, [])\n\n\n\n\n    const moveToProgress = async (id) => {\n        try {\n            const response = await axios.put(`http://localhost:8000/projects/${id}/toprogress`);\n            console.log(response.data);\n\n            Swal.fire({\n                title: \"Project updated InProgress\",\n                text: \"OK\",\n                icon: \"success\"\n            })\n\n            getAllProjects();\n\n        } catch (err) {\n            console.log(err);\n            Swal.fire({\n                title: `Projecto no fue actualizado ${err.response.data.err.message} `,\n                text: \"Not OK\",\n                icon: \"error\"\n            })\n        }\n    }\n\n    const moveToCompleted = async (id) => {\n        try {\n            const response = await axios.put(`http://localhost:8000/projects/${id}/tocompleted`);\n            console.log(response.data);\n\n            Swal.fire({\n                title: \"Project updated to completed\",\n                text: \"OK\",\n                icon: \"success\"\n            })\n\n            getAllProjects();\n\n        } catch (err) {\n            console.log(err);\n            Swal.fire({\n                title: `Project no fue actualizado ${err.response.data.err.message} `,\n                text: \"Not OK\",\n                icon: \"error\"\n            })\n        }\n    }\n\n\n    const deleteProject = async (id) => {\n        await axios.delete(`http://localhost:8000/projects/${id}`)\n            .then(res => {\n                Swal.fire({\n                    title: \"Project Deleted\",\n                    text: `Project eliminado`,\n                    icon: \"success\"\n                });\n                \n                getAllProjects();\n            })\n            .catch(err => {\n                Swal.fire({\n                    title: `Error`,\n                    text: `No se pudo eliminar projecto `,\n                    icon: \"error\"\n                })\n            })\n    }\n\n\n    return (\n        <Container>\n            <Row><h2>Project Manager</h2>\n                <Col className={styles.overflow}>\n                    <p className={styles.backlog}>Backlog</p>\n                    {\n                        projectList.filter(item => (item.status === 'I'))\n                            .map(item =>\n                                <div className={styles.cardBackLog} key={item._id}>\n                                    <h4>{item.projectName}</h4>\n                                    <p>Due: {item.dueDate}</p>\n                                    <Button onClick={() => moveToProgress(item._id)} className={styles.buttonBacklog}>Start Project  &#62;</Button>\n                                </div>\n                            )\n\n                    }\n                </Col>\n                <Col className={styles.overflow}>\n                    <p className={styles.inprogress}>In Progress</p>\n                    {\n                        projectList.filter(item => (item.status === 'P'))\n                            .map(item =>\n                                <div className={styles.cardInProgress} key={item._id}>\n                                    <h4>{item.projectName}</h4>\n                                    <p>Due: {item.dueDate}</p>\n                                    <Button onClick={() => moveToCompleted(item._id)} className={styles.buttonInprogress}>Move to Completed  &#62;</Button>\n                                </div>\n                            )\n\n                    }\n                </Col>\n                <Col className={styles.overflow}>\n                    <p className={styles.completed}>Completed</p>\n                    {\n                        projectList.filter(item => (item.status === 'C'))\n                            .map(item =>\n                                <div className={styles.cardBackLog} key={item._id}>\n                                    <h4>{item.projectName}</h4>\n                                    <p>Due: {item.dueDate}</p>\n                                    <Button onClick={() => deleteProject(item._id)} className={styles.buttonCompleted}>Remove Project  &#62;</Button>\n                                </div>\n                            )\n\n                    }\n\n                </Col>\n                \n            </Row>\n            <Link className={styles.linkAdd} to=\"/projects/new\">+ Add New Project</Link>\n        </Container>\n\n    )\n}\n\nexport default Dashboard;","import './App.css';\nimport UserForm from './components/UserForm';\nimport { UsuarioProvider } from './context/UsuarioContext';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport NewProject from './Views/NewProject';\nimport Dashboard from './Views/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UsuarioProvider>\n        <Router>\n          <Switch>\n\n            <Route exact path=\"/\">\n              <Dashboard></Dashboard>\n            </Route>\n\n            <Route exact path=\"/projects/new\">\n              <NewProject></NewProject>\n            </Route>\n\n            <Route exact path=\"/sign_in\">\n              <UserForm></UserForm>\n            </Route>\n\n\n\n          </Switch>\n\n        </Router>\n      </UsuarioProvider>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n "],"sourceRoot":""}